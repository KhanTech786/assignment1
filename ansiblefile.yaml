- name: Provision EC2 instance
  hosts: localhost
  gather_facts: False
  vars:
    key_name: your_key_name
    region: your_region
    instance_type: your_instance_type
    image: your_image
    security_group: your_security_group
    subnet_id: your_subnet_id
  tasks:
    - name: Launch EC2 instance
      ec2:
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        group: "{{ security_group }}"
        vpc_subnet_id: "{{ subnet_id }}"
        wait: yes
        count: 1
        instance_tags:
          Name: web-server
      register: ec2

    - name: Add instance to host group
      add_host:
        name: "{{ item.public_ip }}"
        groups: web-servers
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

    - name: Install Apache web server
      become: true
      hosts: web-servers
      apt:
        name: apache2
        state: present

    - name: Start Apache web server
      become: true
      hosts: web-servers
      service:
        name: apache2
        state: started

    - name: Copy webpage template to web server
      become: true
      hosts: web-servers
      template:
        src: hello_world.html.j2
        dest: /var/www/html/index.html

    - name: Configure Apache to serve webpage
      become: true
      hosts: web-servers
      lineinfile:
        path: /etc/apache2/sites-available/000-default.conf
        regexp: "^\\s*DocumentRoot"
        line: "DocumentRoot /var/www/html"
      notify:
        - restart apache

    - name: Restart Apache web server
      become: true
      hosts: web-servers
      service:
        name: apache2
        state: restarted
      vars:
        ansible_become_pass: your_sudo_password
